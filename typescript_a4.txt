CG-USER(131): 
CG-USER(131): 
CG-USER(131): (LOAD "C:\\Users\\Leo\\ICS361\\LispProlog\\a4.cl")
; Loading C:\Users\Leo\ICS361\LispProlog\a4.cl
T
CG-USER(132): (TEST-A4)

"(define-concept Human) -> " 
#<STANDARD-CLASS HUMAN> 
"human -> " 
#<STANDARD-CLASS HUMAN> 
"(define-concept Dog) -> " 
#<STANDARD-CLASS DOG> 
"dog -> " 
#<STANDARD-CLASS DOG> 
"(define-relation Owns Human Dog) -> " 
#<STANDARD-CLASS OWNS> 
"(setq h1 (make-concept 'Human 'John)) -> " 
#<HUMAN @ #x2108a1b2> 
"(name h1) -> " 
JOHN 
"(setq d1 (make-concept 'Dog 'Fido)) -> " 
#<DOG @ #x2108a9b2> 
"(name d1) -> " 
FIDO 
"(setq o1 (make-relation 'Owns 'owns1 :from h1 :to d1)) -> " 
#<OWNS @ #x2108b2fa> 
"(from o1) -> " 
#<HUMAN @ #x2108a1b2> 
"(to o1) -> " 
#<DOG @ #x2108a9b2> 
"(froms h1) -> " 
(#<OWNS @ #x2108b2fa>) 
"(tos d1) -> " 
(#<OWNS @ #x2108b2fa>) 
"(setq h2 (make-concept 'Human 'Sue)) -> " 
#<HUMAN @ #x2108c55a> 
"(setf (from o1) h2) -> " 
"calling :after method for (setf from)" 
#<HUMAN @ #x2108c55a> 
"(from o1) -> " 
#<HUMAN @ #x2108c55a> 
"(name (from o1)) -> " 
SUE 
"(froms h1) -> " 
NIL 
"(froms h2) -> " 
(#<OWNS @ #x2108b2fa>) 
"(setq d2 (make-concept 'Dog 'Lassie)) -> " 
#<DOG @ #x2108e07a> 
"(setf (to o1) d2) -> " 
#<DOG @ #x2108e07a> 
"(to o1) -> " 
#<DOG @ #x2108e07a> 
"(name (to o1)) -> " 
LASSIE 
"(tos d1) -> " 
NIL 
"(tos d2) -> " 
(#<OWNS @ #x2108b2fa>) 
"done"
CG-USER(133): 
CG-USER(133): 
CG-USER(133): 